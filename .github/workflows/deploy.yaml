# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Deploy to production

on:
  push:
    branches: ["main"]

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Create env file
        run: |
          touch .env
          echo DB_DRIVER=${{ secrets.DB_DRIVER }} >> .env
          echo DB_SOURCE=${{ secrets.DB_SOURCE }} >> .env
          echo SERVER_ADDRESS=${{ secrets.SERVER_ADDRESS }} >> .env
          echo ACCESS_TOKEN_DURATION=${{ secrets.ACCESS_TOKEN_DURATION }} >> .env
          echo TOKEN_SYMMETRIC_KEY=${{ secrets.TOKEN_SYMETRIC_KEY }} >> .env
          pwd

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      #   - name: Load secrets and save to .env
      #     run: aws secretsmanager get-secret-value --secret-id synapsis-backend-challenge --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > .env

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: synapsis-backend-challenge
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
